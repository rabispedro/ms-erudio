version: '3.7'

services:
  k3s:
    image: rancher/k3s
    container_name: k3s
    privileged: true
    command: server
    tmpfs:
      - /run
      - /var/run
    ulimits:
      nproc: 65535
      nofile:
        soft: 65535
        hard: 65535
    environment:
      - K3S_TOKEN=asomoq8c2j9q23ync@#%@%1
      - K3S_KUBECONFIG_OUTPUT=/output/kubeconfig.yaml
      - K3S_KUBECONFIG_MODE=666
    ports:
      - 8099:80 #Ingress controller port 80
      - 2443:443 # Ingress controller port 443
      - 6443:6443 # Kubernetes API Server
      - 5000:5000 # Registry port 5000
    volumes:
      - k3s-server:/var/lib/rancher/k3s
      - ./output:/output
    networks:
      - k8s

  portainer:
    image: portainer/portainer:latest
    container_name: portainer

    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    #  - /var/lib/docker/volumes:/var/lib/docker/volumes
    ports:
      - "9000:9000"
      - "9001:9001"
    networks:
      - k8s

  ms_erudio_db:
    image: mysql:8.2.0
    container_name: ms_erudio_db
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: admin@123
    ports:
      - 3306:3306
    volumes:
      - ./mysql/volume:/var/lib/mysql

  ms_erudio_messages:
    image: rabbitmq:3.9.29-management-alpine
    container_name: ms_erudio_messages
    restart: always
    hostname: ms-erudio-rabbit
    ports:
      - 5672:5672
      - 15672:15672

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      discovery.type: "single-node"
      #ES_JAVA_OPTS: "-Xms2g -Xmx2g"
      ES_JAVA_OPTS: -Xms750m -Xmx750m
      #xpack.monitoring.enabled: "true"
      xpack.security.enabled: false
      ELASTICSEARCH_USERNAME: elastic
      ELASTICSEARCH_PASSWORD: 2Ryfc2jYNQF=zOAU8mK0
    volumes:
      - ./esdata:/usr/share/elasticsearch/data

  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.0
    ports:
      - "5601:5601"
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
    #volumes:
    #  - ./kibana.yml:/usr/share/kibana/config/kibana.yml
    depends_on:
      - elasticsearch

  sonarqube:
    image: sonarqube:community
    hostname: sonarqube
    container_name: sonarqube
    depends_on:
      - sonarqube_db
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://db:5432/sonar
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonar
    volumes:
      - ./sonarqube_data:/opt/sonarqube/data
      - ./sonarqube_extensions:/opt/sonarqube/extensions
      - ./sonarqube_logs:/opt/sonarqube/logs
    ports:
      - "9900:9000"
    

  sonarqube_db:
    image: postgres:13
    hostname: postgresql
    container_name: sonarqube_db
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
      POSTGRES_DB: sonar
    volumes:
      - ./postgresql:/var/lib/postgresql
      - ./postgresql_data:/var/lib/postgresql/data

volumes:
  k3s-server:
  esdata:
    driver: local
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
  postgresql:
  postgresql_data:
networks:
  k8s:
